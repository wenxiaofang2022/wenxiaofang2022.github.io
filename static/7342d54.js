(window.webpackJsonp=window.webpackJsonp||[]).push([[21,22,23],{497:function(e,t,n){"use strict";n.r(t);t.default="\n\nuniform sampler2D uMap;\n\nvarying vec2 vUv;\nvarying float vDiff;\n\nvoid main() {\n\tgl_FragColor = texture2D(uMap, vUv);\n}"},498:function(e,t,n){"use strict";n.r(t);t.default="\n\nuniform float uTime;\nuniform vec3 uDragStart;\nuniform vec3 uDragTarget;\nuniform float uReleaseDecay;\nuniform float uReleaseFrequency;\nuniform float uDragReleaseTime;\nuniform float uDragRelease;\n\nvarying vec2 vUv;\nvarying float vDiff;\n\n\nvoid main() {\n    float startToTarget = distance(uDragTarget, uDragStart);\n    float distanceToStart = distance(position, uDragStart);\n    float influence = distanceToStart / (0.2 + 0.4 * startToTarget);\n    float distortion = exp(pow(clamp(influence, 0.,1.), 3.2) * -6.);\n\n    if (uDragRelease > 0.) {\n        float timeSinceRelease = uTime - uDragReleaseTime;\n        distortion *= exp(-uReleaseDecay * timeSinceRelease * max(distortion, 1.) / ( 6.));\n        distortion *= cos(timeSinceRelease * uReleaseFrequency / ( 6.28));\n    }\n\n    vec3 stretch = (uDragTarget - uDragStart) * distortion;\n    stretch += (uDragStart - position) * distortion * 0.72;\n\n    vec3 pos = position;\n    pos += stretch;\n    pos.z += abs(distortion) * 0.2;\n\n    vec4 viewPosition = modelViewMatrix * vec4(pos, 1.);\n\n    gl_Position = projectionMatrix * viewPosition;\n\n    vUv = uv;\n    vDiff = length(pos - position) * uDragRelease;\n}"},506:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var r=n(0),o=n(1),l=n(2),f=n(188),c=n(497),v=n(498),m=function(){function e(){Object(r.a)(this,e),this.gltfLoader=new f.a,this.textureLoader=new l.Mb,this.backgroundColor="linear-gradient(0deg, rgb(68 99 49) 0%, rgb(163 174 255) 100%)",this.setMaterial(),this.setShape()}return Object(o.a)(e,[{key:"setMaterial",value:function(){var map=this.textureLoader.load("/caseimg/snorlax_texture.png");map.flipY=!1,this.material=new l.Db({vertexShader:v.default,fragmentShader:c.default,uniforms:{uTime:{value:0},uDragStart:{value:new l.Rb},uDragTarget:{value:new l.Rb},uDragReleaseTime:{value:0},uDragRelease:{value:1},uReleaseDecay:{value:10},uReleaseFrequency:{value:55},uMap:{value:map}},transparent:!0})}},{key:"setShape",value:function(){var e=this;this.gltfLoader.load("assets/snorlax_210.glb",(function(t){console.log("gltf",t),e.shape=t.scene.children[0],e.shape.material=e.material}))}},{key:"onMouseDown",value:function(e){this.material.uniforms.uDragStart.value.copy(e),this.material.uniforms.uDragTarget.value.copy(e),this.material.uniforms.uDragRelease.value=!1}},{key:"onMouseMove",value:function(e){this.material.uniforms.uDragTarget.value.copy(e)}},{key:"onMouseUp",value:function(time){this.material.uniforms.uDragReleaseTime.value=time,this.material.uniforms.uDragRelease.value=!0}},{key:"update",value:function(time){this.material.uniforms.uTime.value=time}},{key:"setConfig",value:function(e){e.addInput(this.material.uniforms.uReleaseDecay,"value",{min:.5,max:30,label:"releaseDecay"}),e.addInput(this.material.uniforms.uReleaseFrequency,"value",{min:1,max:100,label:"releaseFrequency"})}}]),e}()}}]);